version: "3.9"
services:
  db:
    container_name: db_passbolt
    image: mariadb:10.11
    restart: unless-stopped
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
      MYSQL_DATABASE: "passbolt"
      MYSQL_USER: "passbolt"
      MYSQL_PASSWORD: "P4ssb0lt"
    volumes:
      - database_volume:/var/lib/mysql

  passbolt:
    container_name: passbolt
    image: passbolt/passbolt:latest-ce
    #Alternatively you can use rootless:
    #image: passbolt/passbolt:latest-ce-non-root
    restart: unless-stopped
    depends_on:
      - db
    environment:
      APP_FULL_BASE_URL: https://passbolt.local
      DATASOURCES_DEFAULT_HOST: "db"
      DATASOURCES_DEFAULT_USERNAME: "passbolt"
      DATASOURCES_DEFAULT_PASSWORD: "P4ssb0lt"
      DATASOURCES_DEFAULT_DATABASE: "passbolt"
    volumes:
      - gpg_volume:/etc/passbolt/gpg
      - jwt_volume:/etc/passbolt/jwt
    command:
      [
        "/usr/bin/wait-for.sh",
        "-t",
        "0",
        "db:3306",
        "--",
        "/docker-entrypoint.sh",
      ]
    # outside:inside 
    ports:
     - 8080:80
     - 8433:433

  snowflake-proxy:
      network_mode: host
      image: thetorproject/snowflake-proxy:latest
      container_name: snowflake-proxy
      restart: unless-stopped
      #command: [ "-ephemeral-ports-range", "30000:60000" ]
  watchtower:
      image: containrrr/watchtower
      container_name: watchtower
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      command: snowflake-proxy
  keeweb:
    container_name: keeweb
    image: antelle/keeweb
    restart: unless-stopped
    volumes:
      - keeweb_certs:/etc/nginx/external
    ports:
     - 7080:80
     - 7443:433


volumes:
  database_volume:
  gpg_volume:
  jwt_volume:
  keeweb_certs:  

